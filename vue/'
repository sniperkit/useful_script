1.  JavaScript can execute not only in the browser, but also on the server, or actually on any device where there exists a special program called the JavaScript engine.
2. In-browser JavaScript is able to:
    Add new HTML to the page, change the existing content, modify styles.
    React to user actions, run on mouse clicks, pointer movements, key presses.
    Send requests over the network to remote servers, download and upload files (so-called AJAX and COMET technologies).
    Get and set cookies, ask questions to the visitor, show messages.
    Remember the data on the client-side (“local storage”).
3. A single <script> tag can’t have both the src attribute and the code inside.
4. It’s recommended to put semicolons between statements even if they are separated by newlines. This rule is widely adopted by the community. Let’s note once again – it is possible to leave out semicolons most of the time. But it’s safer – especially for a beginner – to use them.
5. One-line comments start with two forward slash characters //.
6. Multiline comments start with a forward slash and an asterisk /* and end with an asterisk and a forward slash */.
7. the dollar sign '$' and the underscore '_' can also be used in names. They are regular symbols, just like letters, without any special meaning.
8. Normally, we need to define a variable before using it. But in the old times, it was technically possible to create a variable by a mere assignment of the value, without let. This still works now if we don’t put use strict. The behavior is kept for compatibility with old scripts.
9. Variables declared using const are called “constants”. They cannot be changed. An attempt to do it would cause an error.
10. var – is an old-school variable declaration. Normally we don’t use it at all, but we’ll cover subtle differences from let in the chapter The old "var", just in case you need them.
11. A variable in JavaScript can contain any data. A variable can at one moment be a string and later receive a numeric value.  Programming languages that allow such things are called “dynamically typed”, meaning that there are data types, but variables are not bound to any of them.
12. Double and single quotes are “simple” quotes. There’s no difference between them in JavaScript.
13. Backticks are “extended functionality” quotes. They allow us to embed variables and expressions into a string by wrapping them in ${…}.
14. If a variable is declared, but not assigned, then its value is exactly undefined.
15. The typeof operator returns the type of the argument. It’s useful when we want to process values of different types differently, or just want to make a quick check.
