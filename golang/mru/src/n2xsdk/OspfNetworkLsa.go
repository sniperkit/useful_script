package n2xsdk

type OspfNetworkLsa struct {
 Handler string
}

func(np *OspfNetworkLsa) SetAdvertisingRouter () error {
 //parameters: LsaHandle RouterId
 //AgtOspfNetworkLsa SetAdvertisingRouter
 return nil
}

func(np *OspfNetworkLsa) GetAdvertisingRouter ()(string, error) {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa GetAdvertisingRouter
 return "", nil
}

func(np *OspfNetworkLsa) SetLinkStateId () error {
 //parameters: LsaHandle LinkStateId
 //AgtOspfNetworkLsa SetLinkStateId
 return nil
}

func(np *OspfNetworkLsa) GetLinkStateId ()(string, error) {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa GetLinkStateId
 return "", nil
}

func(np *OspfNetworkLsa) SetOptions () error {
 //parameters: LsaHandle Options
 //AgtOspfNetworkLsa SetOptions
 return nil
}

func(np *OspfNetworkLsa) GetOptions ()(string, error) {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa GetOptions
 return "", nil
}

func(np *OspfNetworkLsa) SetLsType () error {
 //parameters: LsaHandle Field Value
 //AgtOspfNetworkLsa SetLsType
 return nil
}

func(np *OspfNetworkLsa) GetLsType ()(string, error) {
 //parameters: LsaHandle Field
 //AgtOspfNetworkLsa GetLsType
 return "", nil
}

func(np *OspfNetworkLsa) Advertise () error {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa Advertise
 return nil
}

func(np *OspfNetworkLsa) Withdraw () error {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa Withdraw
 return nil
}

func(np *OspfNetworkLsa) GetAdvertiseFlag ()(string, error) {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa GetAdvertiseFlag
 return "", nil
}

func(np *OspfNetworkLsa) EnableAutoGenerate () error {
 //parameters: LsaHandle HeaderField
 //AgtOspfNetworkLsa EnableAutoGenerate
 return nil
}

func(np *OspfNetworkLsa) DisableAutoGenerate () error {
 //parameters: LsaHandle HeaderField
 //AgtOspfNetworkLsa DisableAutoGenerate
 return nil
}

func(np *OspfNetworkLsa) IsFieldAutoGenerated () error {
 //parameters: LsaHandle HeaderField
 //AgtOspfNetworkLsa IsFieldAutoGenerated
 return nil
}

func(np *OspfNetworkLsa) SetChecksum () error {
 //parameters: LsaHandle Checksum
 //AgtOspfNetworkLsa SetChecksum
 return nil
}

func(np *OspfNetworkLsa) GetChecksum ()(string, error) {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa GetChecksum
 return "", nil
}

func(np *OspfNetworkLsa) SetLsAge () error {
 //parameters: LsaHandle LsAge
 //AgtOspfNetworkLsa SetLsAge
 return nil
}

func(np *OspfNetworkLsa) GetLsAge ()(string, error) {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa GetLsAge
 return "", nil
}

func(np *OspfNetworkLsa) SetSequenceNumber () error {
 //parameters: LsaHandle SeqNum
 //AgtOspfNetworkLsa SetSequenceNumber
 return nil
}

func(np *OspfNetworkLsa) GetSequenceNumber ()(string, error) {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa GetSequenceNumber
 return "", nil
}

func(np *OspfNetworkLsa) EnableAutoUpdate () error {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa EnableAutoUpdate
 return nil
}

func(np *OspfNetworkLsa) DisableAutoUpdate () error {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa DisableAutoUpdate
 return nil
}

func(np *OspfNetworkLsa) IsAutoUpdateEnabled () error {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa IsAutoUpdateEnabled
 return nil
}

func(np *OspfNetworkLsa) SetPrefixLength () error {
 //parameters: LsaHandle PrefixLength
 //AgtOspfNetworkLsa SetPrefixLength
 return nil
}

func(np *OspfNetworkLsa) GetPrefixLength ()(string, error) {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa GetPrefixLength
 return "", nil
}

func(np *OspfNetworkLsa) AddAttachedRouter () error {
 //parameters: LsaHandle RouterId
 //AgtOspfNetworkLsa AddAttachedRouter
 return nil
}

func(np *OspfNetworkLsa) RemoveAttachedRouter () error {
 //parameters: LsaHandle RouterId
 //AgtOspfNetworkLsa RemoveAttachedRouter
 return nil
}

func(np *OspfNetworkLsa) ClearAttachedRouters () error {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa ClearAttachedRouters
 return nil
}

func(np *OspfNetworkLsa) ListAttachedRouters ()(string, error) {
 //parameters: LsaHandle
 //AgtOspfNetworkLsa ListAttachedRouters
 return "", nil
}

func(np *OspfNetworkLsa) GetMaximumAttachedRouters ()(string, error) {
 //parameters: 
 //AgtOspfNetworkLsa GetMaximumAttachedRouters
 return "", nil
}

